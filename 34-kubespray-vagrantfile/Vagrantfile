# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure(2) do |config|
  common = <<-SHELL
  if ! grep -q deploykub /etc/hosts; then  sudo echo "192.168.6.120  deploykub" >> /etc/hosts ;fi
  if ! grep -q node01 /etc/hosts; then  sudo echo "192.168.6.121     node01" >> /etc/hosts ;fi
  if ! grep -q node02 /etc/hosts; then  sudo echo "192.168.6.122     node02" >> /etc/hosts ;fi
  if ! grep -q node03 /etc/hosts; then  sudo echo "192.168.6.123     node03" >> /etc/hosts ;fi
  if ! grep -q node04 /etc/hosts; then  sudo echo "192.168.6.124     node04" >> /etc/hosts ;fi
  if ! grep -q node05 /etc/hosts; then  sudo echo "192.168.6.125     node05" >> /etc/hosts ;fi
  #if ! id admin >  /dev/null 2>&1 ; then sudo useradd -G 10 -p $(openssl passwd -1 redhat) admin; fi
  #if [ ! -f /etc/sudoers.d/admin ] ; then sudo echo "admin        ALL=(ALL)       NOPASSWD: ALL" > /etc/sudoers.d/admin ; fi
  sudo sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-*
  sudo sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-*
  sudo yum update -y
  sudo yum -y install vim tree net-tools telnet git
  sudo yum -y install openssl-devel bzip2-devel libffi-devel
  sudo yum -y groupinstall "Development Tools" -y
  sudo yum -y install wget
  sudo wget https://www.python.org/ftp/python/3.10.2/Python-3.10.2.tgz 
  tar -xzf Python-3.10.2.tgz
  cd Python-3.10.2
  sudo ./configure --enable-optimizations
  sudo make altinstall
  sudo echo "autocmd filetype yaml setlocal ai ts=2 sw=2 et" > /home/vagrant/.vimrc
  sed -i 's/ChallengeResponseAuthentication no/ChallengeResponseAuthentication yes/g' /etc/ssh/sshd_config
  sudo systemctl restart sshd
  SHELL
  

	config.vm.box = "centos/8"
	config.vm.box_url = "centos/8"
	config.vm.define "deploykub" do |control|          #La machine de deploiment
		control.vm.hostname = "deploykub"
		control.vm.network "private_network", ip: "192.168.6.120"
		control.vm.provider "virtualbox" do |v|
			v.customize [ "modifyvm", :id, "--cpus", "1" ]
			v.customize [ "modifyvm", :id, "--memory", "512" ]
			v.customize ["modifyvm",  :id, "--natdnshostresolver1", "on"]
      		v.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
			v.customize ["modifyvm", :id, "--name", "deploykub"]
		end
	config.vm.provision :shell, :inline => common #Proviosionnement de la vm en utilisant SHELL de type inline qui va se baser sur la variable common
	end
	config.vm.define "node01" do |node1|
		node1.vm.hostname = "node01"
		node1.vm.network "private_network", ip: "192.168.6.121"
		node1.vm.provider "virtualbox" do |v|
			v.customize [ "modifyvm", :id, "--cpus", "2" ]
			v.customize [ "modifyvm", :id, "--memory", "2048" ]
			v.customize ["modifyvm",  :id, "--natdnshostresolver1", "on"]
      		v.customize ["modifyvm",  :id, "--natdnsproxy1", "on"]
			v.customize ["modifyvm",  :id, "--name", "node01"]
		end
	config.vm.provision :shell, :inline => common
	end
	config.vm.define "node02" do |node2|
		node2.vm.hostname = "node02"
		node2.vm.network "private_network", ip: "192.168.6.122"
		node2.vm.provider "virtualbox" do |v|
			v.customize [ "modifyvm", :id, "--cpus", "2" ]
			v.customize [ "modifyvm", :id, "--memory", "2048" ]
			v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      			v.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
			v.customize ["modifyvm", :id, "--name", "node02"]
		end
	config.vm.provision :shell, :inline => common
	end
	config.vm.define "node03" do |node3|
		node3.vm.hostname = "node03"
		node3.vm.network "private_network", ip: "192.168.6.123"
		node3.vm.provider "virtualbox" do |v|
			v.customize [ "modifyvm", :id, "--cpus", "2" ]
			v.customize [ "modifyvm", :id, "--memory", "2048" ]
			v.customize ["modifyvm",  :id, "--natdnshostresolver1", "on"]
      		v.customize ["modifyvm",  :id, "--natdnsproxy1", "on"]
			v.customize ["modifyvm",  :id, "--name", "node03"]
		end
	config.vm.provision :shell, :inline => common
	end
	config.vm.define "node04" do |node4|
		node4.vm.hostname = "node04"
		node4.vm.network "private_network", ip: "192.168.6.124"
		node4.vm.provider "virtualbox" do |v|
			v.customize [ "modifyvm", :id, "--cpus", "1" ]
			v.customize [ "modifyvm", :id, "--memory", "2048" ]
			v.customize ["modifyvm",  :id, "--natdnshostresolver1", "on"]
      			v.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
			v.customize ["modifyvm", :id, "--name", "node04"]
		end
	config.vm.provision :shell, :inline => common
	end
	config.vm.define "node05" do |node5|
		node5.vm.hostname = "node05"
		node5.vm.network "private_network", ip: "192.168.6.125"
		node5.vm.provider "virtualbox" do |v|
			v.customize [ "modifyvm", :id, "--cpus", "1" ]
			v.customize [ "modifyvm", :id, "--memory", "2048" ]
			v.customize ["modifyvm",  :id, "--natdnshostresolver1", "on"]
      		v.customize ["modifyvm",  :id, "--natdnsproxy1", "on"]
			v.customize ["modifyvm",  :id, "--name", "node05"]
		end
	config.vm.provision :shell, :inline => common
	end

end

