Vagrant.configure(2) do |config|

	# before you must install these plugins to speed up vagrant provisionning
  # vagrant plugin install vagrant-faster
  # vagrant plugin install vagrant-cachier

  config.cache.auto_detect = true
	# Set some variables
  etcHosts = ""
  postgreqsql_ha = ""
  repmgr = ""
  minio = ""

  case ARGV[0]
    when "provision", "up"
      print "Do you want to install simple postgresql ha (yes/no) ?\n"
      postgreqsql_ha = STDIN.gets.chomp
      print "\n"
      if postgreqsql_ha == "no"
        print "Do you want to install repmgr cluster (yes/no)?\n"
        repmgr = STDIN.gets.chomp
      end
 
      print "Do you want to install minio server (yes/no)?\n"
      minio = STDIN.gets.chomp

    end

	# some settings for common server (not for haproxy)
  common = <<-SHELL
  sudo apt update -qq 2>&1 >/dev/null
  sudo apt install -y -qq iftop curl software-properties-common git vim tree net-tools telnet git 2>&1 >/dev/null
  sed -i 's/ChallengeResponseAuthentication no/ChallengeResponseAuthentication yes/g' /etc/ssh/sshd_config
  sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config
  sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config.d/60-cloudimg-settings.conf
  echo 'Binary::apt::APT::Keep-Downloaded-Packages "true";' | sudo tee /etc/apt/apt.conf.d/99-keep-downloads
  sudo systemctl restart sshd
  SHELL

  config.vm.box = "ubuntu/jammy64"
  config.vm.box_url = "ubuntu/jammy64"
  #config.vm.box = "debian/bookworm64"
  #config.vm.box_url = "debian/bookworm64"


	# set servers list and their parameters
	NODES = [
  	{ :hostname => "pgmaster1", :ip => "192.168.12.190", :cpus => 2, :mem => 2048, :type => "master" },
  	{ :hostname => "pgworker1", :ip => "192.168.12.191", :cpus => 2, :mem => 2048, :type => "worker" },
    { :hostname => "pgwal1", :ip => "192.168.12.192", :cpus => 2, :mem => 2048, :type => "minio" }
	]

	# define /etc/hosts for all servers
  NODES.each do |node|
			etcHosts += "echo '" + node[:ip] + "   " + node[:hostname] + "'>> /etc/hosts" + "\n"
  end #end NODES

	# run installation
  NODES.each do |node|
    config.vm.define node[:hostname] do |cfg|
			cfg.vm.hostname = node[:hostname]
      cfg.vm.network "private_network", ip: node[:ip]
      cfg.vm.provider "virtualbox" do |v|
				v.customize [ "modifyvm", :id, "--cpus", node[:cpus] ]
        v.customize [ "modifyvm", :id, "--memory", node[:mem] ]
        v.customize [ "modifyvm", :id, "--natdnshostresolver1", "on" ]
        v.customize [ "modifyvm", :id, "--name", node[:hostname] ]
				v.customize [ "modifyvm", :id, "--ioapic", "on" ]
        v.customize [ "modifyvm", :id, "--nictype1", "virtio" ]
      end #end provider
			
			#for all
			#cfg.vm.provision :shell, :path => "../_generic_scripts/install_xavki.sh"
      cfg.vm.provision :shell, :inline => etcHosts
			cfg.vm.provision :shell, :inline => common
      cfg.vm.provision :shell, :path => "install_node_exporter.sh"

      if node[:type] != "minio"
        cfg.vm.provision :shell, :path => "install_postgresql.sh"
      end

      if postgreqsql_ha == "yes" && node[:type] != "minio"
        cfg.vm.provision :shell, :path => "install_postgresql_ha.sh", :args => node[:type]
      end

      if repmgr == "yes" && node[:type] != "minio"
        cfg.vm.provision :shell, :path => "install_repmgr.sh", :args => node[:type]
        cfg.vm.provision :shell, :path => "install_keepalived.sh", :args => node[:type]
      end

      if minio == "yes" && node[:type] == "minio"
        cfg.vm.provision :shell, :path => "install_minio.sh"
      end

    end # end config
  end # end nodes

end 


