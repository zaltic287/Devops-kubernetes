Vagrant.configure(2) do |config|

	# before you must install these plugins to speed up vagrant provisionning
  # vagrant plugin install vagrant-faster
  # vagrant plugin install vagrant-cachier

  config.cache.auto_detect = true
	# Set some variables
  etcHosts = ""
  consul = ""

  case ARGV[0]
    when "provision", "up"

    print "Do you want to install a consul cluster (yes/no) ?\n"
    consul = STDIN.gets.chomp
    print "\n"

    print "Do you want to install a nomad cluster (yes/no) ?\n"
    nomad = STDIN.gets.chomp
    print "\n"
  end

	# some settings for common server (not for haproxy)
  common = <<-SHELL
  sudo apt update -qq 2>&1 >/dev/null
  sudo apt install -y -qq unzip iftop curl software-properties-common git vim tree net-tools telnet git 2>&1 >/dev/null
  sed -i 's/ChallengeResponseAuthentication no/ChallengeResponseAuthentication yes/g' /etc/ssh/sshd_config
  sudo systemctl restart sshd
  SHELL

  docker = <<-SHELL
  curl -fsSL https://get.docker.com | bash 2>&1 >/dev/null
  sudo usermod -aG docker vagrant
  sudo service docker start
  sudo curl -L "https://github.com/docker/compose/releases/download/1.25.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
  sudo chmod 755 /usr/local/bin/docker-compose
  SHELL

  config.vm.box = "debian/bullseye64"
  config.vm.box_url = "debian/bullseye64"

  #config.vm.box = "debian/bookworm64"
  #config.vm.box_url = "debian/bookworm64"

	# set servers list and their parameters
	NODES = [
  	{ :hostname => "nomad1", :ip => "192.168.13.10", :cpus => 4, :mem => 2048, :type => "nomad_server" },
  	{ :hostname => "nomad2", :ip => "192.168.13.11", :cpus => 4, :mem => 2048, :type => "nomad_server" },
  	{ :hostname => "nomad3", :ip => "192.168.13.12", :cpus => 4, :mem => 2048, :type => "nomad_server" },
  	{ :hostname => "now1", :ip => "192.168.13.13", :cpus => 4, :mem => 2048, :type => "nomad_worker" },
  	{ :hostname => "now2", :ip => "192.168.13.14", :cpus => 4, :mem => 2048, :type => "nomad_worker" },
  	{ :hostname => "now3", :ip => "192.168.13.15", :cpus => 4, :mem => 2048, :type => "nomad_worker" },
  	{ :hostname => "nminio", :ip => "192.168.13.16", :cpus => 4, :mem => 2048, :type => "minio" }
	]

	# define /etc/hosts for all servers
  NODES.each do |node|
			etcHosts += "echo '" + node[:ip] + "   " + node[:hostname] + "'>> /etc/hosts" + "\n"
  end #end NODES

	# run installation
  NODES.each do |node|
    config.vm.define node[:hostname] do |cfg|
			cfg.vm.hostname = node[:hostname]
      cfg.vm.network "private_network", ip: node[:ip]
      cfg.vm.provider "virtualbox" do |v|
				v.customize [ "modifyvm", :id, "--cpus", node[:cpus] ]
        v.customize [ "modifyvm", :id, "--memory", node[:mem] ]
        v.customize [ "modifyvm", :id, "--natdnshostresolver1", "on" ]
        v.customize [ "modifyvm", :id, "--natdnsproxy1", "on" ]
        v.customize [ "modifyvm", :id, "--name", node[:hostname] ]
				v.customize [ "modifyvm", :id, "--ioapic", "on" ]
        v.customize [ "modifyvm", :id, "--nictype1", "virtio" ]
      end #end provider
			
			#for all
			cfg.vm.provision :shell, :path => "../_generic_scripts/install_xavki.sh"
      cfg.vm.provision :shell, :inline => etcHosts
			cfg.vm.provision :shell, :inline => common
			cfg.vm.provision :shell, :inline => docker

      if node[:type] == "nomad_server"
      	if consul == "yes"
          cfg.vm.provision :shell, :path => "install_consul_master.sh"
        end
      	if nomad == "yes" && consul == "no"
				  cfg.vm.provision :shell, :path => "install_nomad_master.sh", :args => ["withoutconsul"]
				end
      	if nomad == "yes" && consul == "yes"
				  cfg.vm.provision :shell, :path => "install_nomad_master.sh", :args => ["withconsul"]
				end
    	end

			if node[:type] == "nomad_worker"
      	if consul == "yes"
          cfg.vm.provision :shell, :path => "install_consul_agent.sh"
				end
      	if nomad == "yes" && consul == "no"
          cfg.vm.provision :shell, :path => "install_nomad_worker.sh", :args => ["withoutconsul"]
				end
      	if nomad == "yes" && consul == "yes"
          cfg.vm.provision :shell, :path => "install_nomad_worker.sh", :args => ["withconsul"]
				end
      end

    end # end config
  end # end nodes
end 


