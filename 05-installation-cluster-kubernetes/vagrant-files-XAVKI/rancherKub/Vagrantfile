Vagrant.configure(2) do |config|
  common = <<-SHELL
  if ! grep -q deploykub /etc/hosts; then  sudo echo "192.168.11.120     rdeploy" >> /etc/hosts ;fi
  if ! grep -q node01 /etc/hosts; then  sudo echo "192.168.11.121     rmater01" >> /etc/hosts ;fi
  if ! grep -q node03 /etc/hosts; then  sudo echo "192.168.11.123     rnode01" >> /etc/hosts ;fi
  sudo yum -y install vim tree net-tools telnet git python3-pip sshpass
  curl -fsSL https://get.docker.com/ | sudo sh
  sudo usermod -aG docker vagrant
  sudo systemctl enable docker
  sudo systemctl start docker
  sudo echo "autocmd filetype yaml setlocal ai ts=2 sw=2 et" > /home/vagrant/.vimrc
  sed -i 's/ChallengeResponseAuthentication no/ChallengeResponseAuthentication yes/g' /etc/ssh/sshd_config
  sudo systemctl restart sshd
  SHELL

	config.vm.box = "centos/7"
	config.vm.box_url = "centos/7"

	config.vm.define "rdeploy" do |rdeploy|
		rdeploy.vm.hostname = "rdeploy"
		rdeploy.vm.network "private_network", ip: "192.168.11.150"
		rdeploy.vm.provider "virtualbox" do |v|
			v.customize [ "modifyvm", :id, "--cpus", "2" ]
			v.customize [ "modifyvm", :id, "--memory", "4096" ]
			v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      			v.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
			v.customize ["modifyvm", :id, "--name", "rdeploy"]
		end
		config.vm.provision :shell, :inline => common
	end
	config.vm.define "rmater01" do |rmater01|
		rmater01.vm.hostname = "rmater01"
		rmater01.vm.network "private_network", ip: "192.168.11.151"
		rmater01.vm.provider "virtualbox" do |v|
			v.customize [ "modifyvm", :id, "--cpus", "4" ]
			v.customize [ "modifyvm", :id, "--memory", "4096" ]
			v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      			v.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
			v.customize ["modifyvm", :id, "--name", "rmater01"]
		end
		config.vm.provision :shell, :inline => common
	end
	config.vm.define "rnode01" do |rnode01|
		rnode01.vm.hostname = "rnode01"
		rnode01.vm.network "private_network", ip: "192.168.11.152"
		rnode01.vm.provider "virtualbox" do |v|
			v.customize [ "modifyvm", :id, "--cpus", "2" ]
			v.customize [ "modifyvm", :id, "--memory", "4096" ]
			v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      			v.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
			v.customize ["modifyvm", :id, "--name", "rnode01"]
		end
		config.vm.provision :shell, :inline => common
	end
end

