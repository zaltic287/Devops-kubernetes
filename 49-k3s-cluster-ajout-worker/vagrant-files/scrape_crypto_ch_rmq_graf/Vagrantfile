Vagrant.configure(2) do |config|

	# before you must install these plugins to speed up vagrant provisionning
  # vagrant plugin install vagrant-faster
  # vagrant plugin install vagrant-cachier

  config.cache.auto_detect = true
	# Set some variables
  etcHosts = ""
  clickhouse = ""
  monitoring = ""
  superset = ""
  logs = ""

 # case ARGV[0]
 #   when "provision", "up"

 #   print "Do you want to install clickhouse (yes/no) ?\n"
 #   clickhouse = STDIN.gets.chomp

 #   print "\n"
 #   if clickhouse == "yes"
 #     print "Do you want to install monitoring (yes/no) ?\n"
 #     monitoring = STDIN.gets.chomp
 #     print "\n"
 #     print "Do you want to install superset (yes/no) ?\n"
 #     superset = STDIN.gets.chomp
 #     print "\n"
 #     print "Do you want to install sample logs with nginx (yes/no) ?\n"
 #     logs = STDIN.gets.chomp
 #   end


 # end

	# some settings for common server (not for haproxy)
  common = <<-SHELL
  sudo apt update -qq 2>&1 >/dev/null
  sudo apt install -y -qq zip curl wget dnsutils iftop curl software-properties-common git vim tree net-tools telnet git gnupg2 2>&1 >/dev/null
  sed -i 's/ChallengeResponseAuthentication no/ChallengeResponseAuthentication yes/g' /etc/ssh/sshd_config
  sudo systemctl restart sshd
  SHELL

  docker = <<-SHELL
  curl -fsSL https://get.docker.com -o get-docker.sh 2>&1 >/dev/null
  sudo sh get-docker.sh 2>&1 >/dev/null
  sudo usermod -aG docker vagrant
  sudo service docker start
  SHELL

  config.vm.box = "debian/bullseye64"
  config.vm.box_url = "debian/bullseye64"
	#config.vm.box = "ubuntu/focal64"
	#config.vm.box_url = "ubuntu/focal64"


	# set servers list and their parameters
	NODES = [
  	{ :hostname => "pg1", :ip => "192.168.13.104", :cpus => 2, :mem => 1024, :type => "postgres" },
  	{ :hostname => "ch1", :ip => "192.168.13.102", :cpus => 4, :mem => 2048, :type => "clickhouse" },
  	{ :hostname => "rmq1", :ip => "192.168.13.103", :cpus => 2, :mem => 1024, :type => "rabbitmq" },
  	{ :hostname => "scr1", :ip => "192.168.13.101", :cpus => 4, :mem => 4096, :type => "scraper" },
  	{ :hostname => "ins1", :ip => "192.168.13.105", :cpus => 2, :mem => 2048, :type => "inserter" },
  	{ :hostname => "prom", :ip => "192.168.13.106", :cpus => 2, :mem => 2048, :type => "monitor" }
	]

	# define /etc/hosts for all servers
  NODES.each do |node|
			etcHosts += "echo '" + node[:ip] + "   " + node[:hostname] + "'>> /etc/hosts" + "\n"
  end #end NODES

	# run installation
  NODES.each do |node|
    config.vm.define node[:hostname] do |cfg|
			cfg.vm.hostname = node[:hostname]
      cfg.vm.network "private_network", ip: node[:ip]
      #if node[:type] == "clickhouse"
      #  cfg.disksize.size = '110GB'
      #end
      cfg.vm.provider "virtualbox" do |v|
				v.customize [ "modifyvm", :id, "--cpus", node[:cpus] ]
        v.customize [ "modifyvm", :id, "--memory", node[:mem] ]
        v.customize [ "modifyvm", :id, "--natdnshostresolver1", "on" ]
        v.customize [ "modifyvm", :id, "--natdnsproxy1", "on" ]
        v.customize [ "modifyvm", :id, "--name", node[:hostname] ]
				v.customize [ "modifyvm", :id, "--ioapic", "on" ]
        v.customize [ "modifyvm", :id, "--nictype1", "virtio" ]
      end #end provider
			
			#for all
      cfg.vm.provision :shell, :inline => etcHosts
			cfg.vm.provision :shell, :inline => common
      cfg.vm.provision :shell, :path => "install_xavki.sh"
      cfg.vm.provision :shell, :path => "install_node_exporter.sh"

        if node[:type] == "rabbitmq"
          cfg.vm.provision :shell, :path => "install_rabbitmq.sh"
			  end
        if node[:type] == "scraper"
          cfg.vm.provision :shell, :path => "install_scraper.sh"
			  end
        if node[:type] == "inserter"
          cfg.vm.provision :shell, :path => "install_inserter.sh"
			  end
        if node[:type] == "postgres"
          cfg.vm.provision :shell, :path => "install_postgresql.sh"
			  end
        if node[:type] == "clickhouse"
          cfg.vm.provision :shell, :path => "install_clickhouse.sh"
			  end
        if node[:type] == "monitor"
          cfg.vm.provision :shell, :path => "install_prometheus.sh"
			  end

    end # end config
  end # end nodes

end 


