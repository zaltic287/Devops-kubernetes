Vagrant.configure(2) do |config|

	# before you must install these plugins to speed up vagrant provisionning
  # vagrant plugin install vagrant-faster
  # vagrant plugin install vagrant-cachier

  config.cache.auto_detect = true
	# Set some variables
  etcHosts = ""
  etcd = ""

  case ARGV[0]
    when "provision", "up"

    print "Do you want to install etcd (y/n) ?\n"
    etcd = STDIN.gets.chomp

  end

	# some settings for common server (not for haproxy)
  common = <<-SHELL
  sudo apt update -qq 2>&1 >/dev/null
  sudo apt install -y -qq iftop curl software-properties-common git vim tree net-tools telnet git 2>&1 >/dev/null
  sed -i 's/ChallengeResponseAuthentication no/ChallengeResponseAuthentication yes/g' /etc/ssh/sshd_config
  sudo systemctl restart sshd
  SHELL

  config.vm.box = "debian/bookworm64"
  config.vm.box_url = "debian/bookworm64"

	# set servers list and their parameters
	NODES = [
  	{ :hostname => "etcd1", :ip => "192.168.12.180", :cpus => 1, :mem => 1024, :type => "etcd" },
  	{ :hostname => "etcd2", :ip => "192.168.12.181", :cpus => 1, :mem => 1024, :type => "etcd" },
  	{ :hostname => "etcd3", :ip => "192.168.12.182", :cpus => 1, :mem => 1024, :type => "etcd" },
  	{ :hostname => "etcd11", :ip => "192.168.12.183", :cpus => 1, :mem => 1024, :type => "etcd" },
  	{ :hostname => "etcd12", :ip => "192.168.12.184", :cpus => 1, :mem => 1024, :type => "etcd" },
  	{ :hostname => "etcd13", :ip => "192.168.12.185", :cpus => 1, :mem => 1024, :type => "etcd" }
	]

	# define /etc/hosts for all servers
  NODES.each do |node|
			etcHosts += "echo '" + node[:ip] + "   " + node[:hostname] + "'>> /etc/hosts" + "\n"
  end #end NODES

	# run installation
  NODES.each do |node|
    config.vm.define node[:hostname] do |cfg|
			cfg.vm.hostname = node[:hostname]
      cfg.vm.network "private_network", ip: node[:ip]
      #if node[:type] == "clickhouse"
      #  cfg.disksize.size = '110GB'
      #end
      cfg.vm.provider "virtualbox" do |v|
				v.customize [ "modifyvm", :id, "--cpus", node[:cpus] ]
        v.customize [ "modifyvm", :id, "--memory", node[:mem] ]
        v.customize [ "modifyvm", :id, "--natdnshostresolver1", "on" ]
        #v.customize [ "modifyvm", :id, "--natdnsproxy1", "on" ]
        v.customize [ "modifyvm", :id, "--name", node[:hostname] ]
				v.customize [ "modifyvm", :id, "--ioapic", "on" ]
        v.customize [ "modifyvm", :id, "--nictype1", "virtio" ]
      end #end provider
			
			#for all
			cfg.vm.provision :shell, :path => "../_generic_scripts/install_xavki.sh"
      cfg.vm.provision :shell, :inline => etcHosts
			cfg.vm.provision :shell, :inline => common
      #cfg.vm.provision :shell, :path => "install_node_exporter.sh"

      if etcd == "y"
          cfg.vm.provision :shell, :path => "install_etcd.sh"
			end

    end # end config
  end # end nodes

end 


